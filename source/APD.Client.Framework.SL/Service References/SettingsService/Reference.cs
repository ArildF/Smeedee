//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40624.0
// 
namespace APD.Client.Framework.SL.SettingsService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://agileprojectdashboard.org", ConfigurationName="SettingsService.SettingsService")]
    public interface SettingsService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://agileprojectdashboard.org/SettingsService/SaveSettings", ReplyAction="http://agileprojectdashboard.org/SettingsService/SaveSettingsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        System.IAsyncResult BeginSaveSettings(APD.Framework.Settings.Settings settings, System.AsyncCallback callback, object asyncState);
        
        void EndSaveSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://agileprojectdashboard.org/SettingsService/GetSettings", ReplyAction="http://agileprojectdashboard.org/SettingsService/GetSettingsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        System.IAsyncResult BeginGetSettings(System.AsyncCallback callback, object asyncState);
        
        APD.Framework.Settings.Settings EndGetSettings(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface SettingsServiceChannel : APD.Client.Framework.SL.SettingsService.SettingsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public APD.Framework.Settings.Settings Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((APD.Framework.Settings.Settings)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SettingsServiceClient : System.ServiceModel.ClientBase<APD.Client.Framework.SL.SettingsService.SettingsService>, APD.Client.Framework.SL.SettingsService.SettingsService {
        
        private BeginOperationDelegate onBeginSaveSettingsDelegate;
        
        private EndOperationDelegate onEndSaveSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onSaveSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSettingsDelegate;
        
        private EndOperationDelegate onEndGetSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SettingsServiceClient() {
        }
        
        public SettingsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SettingsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SettingsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SettingsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveSettingsCompleted;
        
        public event System.EventHandler<GetSettingsCompletedEventArgs> GetSettingsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult APD.Client.Framework.SL.SettingsService.SettingsService.BeginSaveSettings(APD.Framework.Settings.Settings settings, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveSettings(settings, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void APD.Client.Framework.SL.SettingsService.SettingsService.EndSaveSettings(System.IAsyncResult result) {
            base.Channel.EndSaveSettings(result);
        }
        
        private System.IAsyncResult OnBeginSaveSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            APD.Framework.Settings.Settings settings = ((APD.Framework.Settings.Settings)(inValues[0]));
            return ((APD.Client.Framework.SL.SettingsService.SettingsService)(this)).BeginSaveSettings(settings, callback, asyncState);
        }
        
        private object[] OnEndSaveSettings(System.IAsyncResult result) {
            ((APD.Client.Framework.SL.SettingsService.SettingsService)(this)).EndSaveSettings(result);
            return null;
        }
        
        private void OnSaveSettingsCompleted(object state) {
            if ((this.SaveSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveSettingsAsync(APD.Framework.Settings.Settings settings) {
            this.SaveSettingsAsync(settings, null);
        }
        
        public void SaveSettingsAsync(APD.Framework.Settings.Settings settings, object userState) {
            if ((this.onBeginSaveSettingsDelegate == null)) {
                this.onBeginSaveSettingsDelegate = new BeginOperationDelegate(this.OnBeginSaveSettings);
            }
            if ((this.onEndSaveSettingsDelegate == null)) {
                this.onEndSaveSettingsDelegate = new EndOperationDelegate(this.OnEndSaveSettings);
            }
            if ((this.onSaveSettingsCompletedDelegate == null)) {
                this.onSaveSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginSaveSettingsDelegate, new object[] {
                        settings}, this.onEndSaveSettingsDelegate, this.onSaveSettingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult APD.Client.Framework.SL.SettingsService.SettingsService.BeginGetSettings(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSettings(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        APD.Framework.Settings.Settings APD.Client.Framework.SL.SettingsService.SettingsService.EndGetSettings(System.IAsyncResult result) {
            return base.Channel.EndGetSettings(result);
        }
        
        private System.IAsyncResult OnBeginGetSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((APD.Client.Framework.SL.SettingsService.SettingsService)(this)).BeginGetSettings(callback, asyncState);
        }
        
        private object[] OnEndGetSettings(System.IAsyncResult result) {
            APD.Framework.Settings.Settings retVal = ((APD.Client.Framework.SL.SettingsService.SettingsService)(this)).EndGetSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSettingsCompleted(object state) {
            if ((this.GetSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSettingsCompleted(this, new GetSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSettingsAsync() {
            this.GetSettingsAsync(null);
        }
        
        public void GetSettingsAsync(object userState) {
            if ((this.onBeginGetSettingsDelegate == null)) {
                this.onBeginGetSettingsDelegate = new BeginOperationDelegate(this.OnBeginGetSettings);
            }
            if ((this.onEndGetSettingsDelegate == null)) {
                this.onEndGetSettingsDelegate = new EndOperationDelegate(this.OnEndGetSettings);
            }
            if ((this.onGetSettingsCompletedDelegate == null)) {
                this.onGetSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSettingsDelegate, null, this.onEndGetSettingsDelegate, this.onGetSettingsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override APD.Client.Framework.SL.SettingsService.SettingsService CreateChannel() {
            return new SettingsServiceClientChannel(this);
        }
        
        private class SettingsServiceClientChannel : ChannelBase<APD.Client.Framework.SL.SettingsService.SettingsService>, APD.Client.Framework.SL.SettingsService.SettingsService {
            
            public SettingsServiceClientChannel(System.ServiceModel.ClientBase<APD.Client.Framework.SL.SettingsService.SettingsService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSaveSettings(APD.Framework.Settings.Settings settings, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = settings;
                System.IAsyncResult _result = base.BeginInvoke("SaveSettings", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveSettings(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveSettings", _args, result);
            }
            
            public System.IAsyncResult BeginGetSettings(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSettings", _args, callback, asyncState);
                return _result;
            }
            
            public APD.Framework.Settings.Settings EndGetSettings(System.IAsyncResult result) {
                object[] _args = new object[0];
                APD.Framework.Settings.Settings _result = ((APD.Framework.Settings.Settings)(base.EndInvoke("GetSettings", _args, result)));
                return _result;
            }
        }
    }
}
