//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.userDomainDataSource
{
    using System;

    // To significantly reduce the sample data footprint in your production application, you can set
    // the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class userDomainDataSource { }
#else

    public class userDomainDataSource : System.ComponentModel.INotifyPropertyChanged
    {
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        public userDomainDataSource()
        {
            try
            {
                System.Uri resourceUri = new System.Uri("/Smeedee.Widget.TeamMembers;component/SampleData/userDomainDataSource/userDomainDataSource.xaml", System.UriKind.Relative);
                if (System.Windows.Application.GetResourceStream(resourceUri) != null)
                {
                    System.Windows.Application.LoadComponent(this, resourceUri);
                }
            }
            catch (System.Exception)
            {
            }
        }

        private TeamMembers _TeamMembers = new TeamMembers();

        public TeamMembers TeamMembers
        {
            get
            {
                return this._TeamMembers;
            }
        }
    }

    public class TeamMembersItem : System.ComponentModel.INotifyPropertyChanged
    {
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        private string _ImageUrl = string.Empty;

        public string ImageUrl
        {
            get
            {
                return this._ImageUrl;
            }

            set
            {
                if (this._ImageUrl != value)
                {
                    this._ImageUrl = value;
                    this.OnPropertyChanged("ImageUrl");
                }
            }
        }

        private string _Surname = string.Empty;

        public string Surname
        {
            get
            {
                return this._Surname;
            }

            set
            {
                if (this._Surname != value)
                {
                    this._Surname = value;
                    this.OnPropertyChanged("Surname");
                }
            }
        }

        private string _Username = string.Empty;

        public string Username
        {
            get
            {
                return this._Username;
            }

            set
            {
                if (this._Username != value)
                {
                    this._Username = value;
                    this.OnPropertyChanged("Username");
                }
            }
        }

        private string _Middlename = string.Empty;

        public string Middlename
        {
            get
            {
                return this._Middlename;
            }

            set
            {
                if (this._Middlename != value)
                {
                    this._Middlename = value;
                    this.OnPropertyChanged("Middlename");
                }
            }
        }

        private string _Email = string.Empty;

        public string Email
        {
            get
            {
                return this._Email;
            }

            set
            {
                if (this._Email != value)
                {
                    this._Email = value;
                    this.OnPropertyChanged("Email");
                }
            }
        }

        private string _Firstname = string.Empty;

        public string Firstname
        {
            get
            {
                return this._Firstname;
            }

            set
            {
                if (this._Firstname != value)
                {
                    this._Firstname = value;
                    this.OnPropertyChanged("Firstname");
                }
            }
        }
    }

    public class TeamMembers : System.Collections.ObjectModel.ObservableCollection<TeamMembersItem>
    {
    }
#endif
}
